from urllib.parse import urlparse, urlunparse

import psycopg2
import pytest

from apollo.conf import DATABASE_URL


@pytest.fixture(scope="session", autouse=True)
def use_db():
    """This fixture will be executed once, creating the given database and table."""
    database_url = urlparse(DATABASE_URL)
    test_database_name = f"{database_url.path}_test"
    database_url = database_url._replace(path=test_database_name)
    test_database_name = test_database_name.lstrip("/")
    test_database_url = str(urlunparse(database_url))

    connection = psycopg2.connect(DATABASE_URL)
    connection.autocommit = True
    try:
        connection.cursor().execute(f"CREATE DATABASE {test_database_name}")
    except psycopg2.errors.DuplicateDatabase:
        pass
    connection.close()

    connection = psycopg2.connect(test_database_url)
    connection.autocommit = True

    try:
        create_table_query = """
            CREATE TABLE data
            (
                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                sensor_id VARCHAR(32) NOT NULL,
                temp NUMERIC(7, 2) NOT NULL,
                humidity NUMERIC(7, 2),
                created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
            )
        """
        connection.cursor().execute(create_table_query)
    except psycopg2.errors.DuplicateTable:
        pass

    try:
        connection.cursor().execute("CREATE INDEX created_at_index ON data (created_at DESC)")
    except psycopg2.errors.DuplicateTable:
        pass
    yield connection


@pytest.fixture(scope="function", autouse=True)
def clear_tables(use_db):
    """This fixture will be executed after every test, clearing the given table."""
    yield
    use_db.cursor().execute("TRUNCATE TABLE data RESTART IDENTITY;")
